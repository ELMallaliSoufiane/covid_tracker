{"version":3,"sources":["components/Cards.js","api.js","components/CountryPicker.js","components/Chart.js","App.js","index.js"],"names":["Cards","props","className","Card","style","width","Body","Title","icon","faBed","color","size","data","confirmed","value","recovered","faSkull","deaths","Date","lastUpdate","toUTCString","url","fetchData","country","a","churl","axios","get","console","log","fetchCountry","countries","map","name","fetchDaily","Mdata","element","totalConfirmed","reportDate","totalDeaths","total","CountryPicker","handleCountryChange","useState","setCountries","useEffect","fetchedCountries","class","defaultValue","onChange","e","target","i","key","Chart","Daily","setDaily","fAPI","labels","datasets","label","borderColor","pointRadius","borderWidth","options","elements","line","fill","App","fetcheddata","setState","state","loaded","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a172dee5.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Card} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { EmojiFrown, EmojiAngry, EmojiSmile } from 'react-bootstrap-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faSkull, faBed } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst Cards = (props)=>{\r\n\r\n    return(\r\n    <div className=\"container mt-3\">\r\n        <div className=\"row\">\r\n            <div className=\"col-xs-12 col-md-4\">\r\n                <Card style={{ width: '15rem' }}>\r\n                    <Card.Body>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-8\">\r\n                        <Card.Title>infected</Card.Title>\r\n                       </div>\r\n                        <div className=\"col-4\">\r\n                        <FontAwesomeIcon icon={faBed} color=\"blue\" size=\"lg\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                        <h5>{props.data.confirmed.value}</h5>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-xs-12 col-md-4\">\r\n                <Card style={{ width: '15rem' }}>\r\n                        <Card.Body>\r\n                        <div className=\"row\">\r\n                        \r\n                            <div className=\"col-8\">\r\n                            <Card.Title>Recovered</Card.Title>\r\n                            </div>\r\n                            <div className=\"col-4\">\r\n                            <EmojiSmile color=\"green\" size={24} />\r\n                            </div>\r\n                        </div>\r\n                        <h5>{props.data.recovered.value}</h5>\r\n                        </Card.Body>\r\n                </Card>\r\n            </div>\r\n            <div className=\"col-xs-12 col-md-4\">\r\n                <Card style={{ width: '15rem' }}>\r\n                        <Card.Body>\r\n                            <div className=\"row\">\r\n                                <div className=\"col-8\">\r\n                                    <Card.Title>Deaths</Card.Title>\r\n                                </div>\r\n                                <div className=\"col-4\">\r\n                                <FontAwesomeIcon icon={faSkull} color=\"red\" size=\"lg\" />\r\n                                </div>\r\n                            </div>\r\n                        <h5>{props.data.deaths.value}</h5>\r\n                        </Card.Body>\r\n                </Card>\r\n            </div>\r\n        </div>\r\n        <span className=\"mb-2 text-muted\" >Last update: {(new Date(props.data.lastUpdate)).toUTCString()}</span>\r\n    </div>    \r\n        );\r\n}\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country)=>{\r\n    try {\r\n       var churl=url;\r\n        if(country){\r\n            churl=`${url}/countries/${country}`;\r\n        }\r\n\r\n        const {data : {confirmed, deaths, recovered, lastUpdate}} = await axios.get(churl);\r\n        return {confirmed, deaths, recovered, lastUpdate};\r\n    \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchCountry = async () => {\r\n    try {\r\n       const {data:{countries}} = await axios.get(url+'/countries');\r\n       \r\n       console.log(countries);\r\n       return countries.map((country)=> country.name); \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const fetchDaily = async () => {\r\n    try {\r\n        const {data} = await axios.get(url+'/daily');\r\n        console.log(data);\r\n        const Mdata= data.map((element) => ({ totalConfirmed: element.totalConfirmed, reportDate:  element.reportDate, totalDeaths:  element.deaths.total}));\r\n        return Mdata;\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport {fetchCountry} from '../api';\r\n\r\n\r\n\r\n\r\nconst CountryPicker = ({handleCountryChange})=>{\r\n    const [countries, setCountries] = useState([]);\r\nuseEffect(()=>{\r\n    const fetchedCountries = async ()=>{\r\n        setCountries(await fetchCountry());\r\n    }\r\n\r\n    fetchedCountries();\r\n\r\n},setCountries);\r\n\r\n\r\n    return(\r\n        <div class=\"countrypicker\">\r\n        <strong className=\"mr-3\">Select the country: </strong>\r\n            <select defaultValue=\"\" onChange={(e)=>{handleCountryChange(e.target.value)}}>\r\n                <option value=\"\">global</option>\r\n                {countries.map((country,i) => <option key={i} value={country}>{country}</option>)}\r\n            </select>\r\n        </div>\r\n        );\r\n}\r\n\r\nexport default CountryPicker;","import React, {useState, useEffect} from 'react';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport {fetchDaily} from '../api';\r\n\r\nconst Chart = (props) => {\r\n    const [Daily, setDaily] = useState([]);\r\n     useEffect(()=>{\r\n         const fAPI  = async () =>{\r\n        setDaily(await fetchDaily());}\r\n\r\n        fAPI();\r\n    });\r\n\r\n    return (\r\n        <div>\r\n        <Line \r\n        data= {{\r\n            labels: Daily.map(({reportDate})=> reportDate),\r\n            datasets:[{\r\n                label:'Infected',\r\n                data: Daily.map(({totalConfirmed}) => totalConfirmed),\r\n                borderColor:'blue',\r\n                pointRadius:0,\r\n                borderWidth:2,\r\n            },\r\n               {\r\n                data: Daily.map(({totalDeaths}) => totalDeaths),\r\n                label:'Deaths',\r\n                borderColor: 'red',\r\n                pointRadius:0,\r\n                borderWidth:2,\r\n\r\n               },\r\n            ],\r\n        }}\r\n        options={{\r\n            elements:{\r\n                line:{\r\n                    fill: true,\r\n                    }\r\n                    }\r\n\r\n\r\n        }}\r\n\r\n        />\r\n        </div>);\r\n\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport Cards from './components/Cards';\r\nimport CountryPicker from './components/CountryPicker';\r\nimport {fetchData, fetchDaily} from './api';\r\nimport Chart from './components/Chart';\r\n\r\n\r\n\r\nclass App extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            data : {},\r\n            country: '',\r\n            loaded:false,\r\n        }\r\n    }\r\n\r\n     handleCountryChange = async (country) => {\r\n         console.log(country);\r\n         const fetcheddata = await fetchData(country);\r\n         console.log(fetcheddata);\r\n        this.setState({\r\n            data:fetcheddata,\r\n            country:country,\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    async componentDidMount(){ \r\n        const data = await fetchData();\r\n        this.setState({\r\n            data:data,\r\n            loaded:true,\r\n        });        \r\n    }\r\n    render(){\r\n        const {data, country} = this.state;\r\n        if(this.state.loaded){\r\n        return(<div className=\"app\">\r\n        <div className=\"mt-2 mb-3\">\r\n            <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n            </div>\r\n        <div className=\"mb-2\">\r\n            <Cards data={data} />\r\n            </div>\r\n        <div className=\"\">\r\n            <Chart/>\r\n            </div> \r\n            \r\n        </div>);\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}